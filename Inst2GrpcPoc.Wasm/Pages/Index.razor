@page "/"
@using SearchPayment
@using Grpc.Core
@using Grpc.Net.Client
@inject GrpcChannel Channel

<h1>Hello, world!</h1>

<!-- Add input for the number of payments and a button to initiate the fetch -->
<div>
    <label for="numPayments">Enter number of payments to get:</label>
    <input type="number" id="numPayments" @bind="numberOfPayments" />
    <button @onclick="GetPayments">Fetch Payments</button>
</div>

@if (payments != null)
{
    <table>
        <thead>
        <tr>
            <th>ID</th>
            <th>Sender</th>
            <th>Receiver</th>
            <th>Amount</th>
            <th>Timestamp</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var payment in payments)
        {
            <tr>
                <td>@payment.Id</td>
                <td>@payment.Sender</td>
                <td>@payment.Receiver</td>
                <td>@payment.Amount</td>
                <td>@payment.Timestamp</td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <p>No data to display.</p>
}

@code {
    private List<SearchPaymentGrpcReply> payments;
    private int numberOfPayments;

    private async Task GetPayments()
    {
        payments = new List<SearchPaymentGrpcReply>(); // Reinitialize the list to clear previous data
        var client = new SearchPaymentGrpcService.SearchPaymentGrpcServiceClient(Channel);
        var call = client.RetrievePaymentsGrpcStream(new SearchPaymentGrpcRequest { NumberOfPayments = numberOfPayments });

        await foreach (var reply in call.ResponseStream.ReadAllAsync())
        {
            payments.Add(reply);
            StateHasChanged();
        }
    }
}